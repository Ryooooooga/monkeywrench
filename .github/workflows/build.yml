name: Build

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: rustup component add clippy rustfmt
        run: rustup component add clippy rustfmt

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --verbose --all -- --check

      - name: cargo clippy -- --all
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose --all -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: cargo build --verbose

      - name: Run unit tests
        run: cargo test --verbose

      - name: Run integration tests
        run: ./test/integration.bash

  release-build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - aarch64-apple-darwin
          - aarch64-unknown-linux-gnu
        include:
          - target: x86_64-apple-darwin
            os: macOS-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macOS-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

    name: Release build - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}
          use-cross: true

      - name: Archive an executable
        id: asset
        run: |
          EXE=
          ARCHIVE=.tar.gz
          if ${{ contains(matrix.target, 'pc-windows') }}; then
            EXE=.exe
            ARCHIVE=.zip
          fi

          NAME="${GITHUB_REPOSITORY#*/}"
          EXECUTABLE="${NAME}${EXE}"
          ASSET="${NAME}${ARCHIVE}"
          mv "./target/${{ matrix.target }}/release/${EXECUTABLE}" "./${EXECUTABLE}"

          if [[ "${ARCHIVE}" = ".tar.gz" ]]; then
            tar czfv "./${ASSET}" "${EXECUTABLE}"
          else
            zip "./${ASSET}" "${EXECUTABLE}"
          fi
          echo "asset=${ASSET}" >>$GITHUB_OUTPUT
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.target }}
          path: ${{ steps.asset.outputs.asset }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint, build, release-build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Rename assets
        id: asset
        run: |
          NAME=${GITHUB_REPOSITORY#*/}
          TAG=${GITHUB_REF#refs/tags/}

          mv "artifact-x86_64-apple-darwin/${NAME}.tar.gz" "./${NAME}-${TAG}-x86_64-apple-darwin.tar.gz"
          mv "artifact-x86_64-unknown-linux-gnu/${NAME}.tar.gz" "./${NAME}-${TAG}-x86_64-unknown-linux-gnu.tar.gz"
          mv "artifact-x86_64-pc-windows-gnu/${NAME}.zip" "./${NAME}-${TAG}-x86_64-pc-windows-gnu.zip"
          mv "artifact-aarch64-apple-darwin/${NAME}.tar.gz" "./${NAME}-${TAG}-aarch64-apple-darwin.tar.gz"
          mv "artifact-aarch64-unknown-linux-gnu/${NAME}.tar.gz" "./${NAME}-${TAG}-aarch64-unknown-linux-gnu.tar.gz"

          echo "asset-x86_64-apple-darwin=${NAME}-${TAG}-x86_64-apple-darwin.tar.gz" >>$GITHUB_OUTPUT
          echo "asset-x86_64-unknown-linux-gnu=${NAME}-${TAG}-x86_64-unknown-linux-gnu.tar.gz" >>$GITHUB_OUTPUT
          echo "asset-x86_64-pc-windows-gnu=${NAME}-${TAG}-x86_64-pc-windows-gnu.zip" >>$GITHUB_OUTPUT
          echo "asset-aarch64-apple-darwin=${NAME}-${TAG}-aarch64-apple-darwin.tar.gz" >>$GITHUB_OUTPUT
          echo "asset-aarch64-unknown-linux-gnu=${NAME}-${TAG}-aarch64-unknown-linux-gnu.tar.gz" >>$GITHUB_OUTPUT

      - name: Checksum
        run: >
          sha256sum
          ${{ steps.asset.outputs.asset-x86_64-apple-darwin }}
          ${{ steps.asset.outputs.asset-x86_64-unknown-linux-gnu }}
          ${{ steps.asset.outputs.asset-x86_64-pc-windows-gnu }}
          ${{ steps.asset.outputs.asset-aarch64-apple-darwin }}
          ${{ steps.asset.outputs.asset-aarch64-unknown-linux-gnu }}
          | tee checksum.txt

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            checksum.txt
            ${{ steps.asset.outputs.asset-x86_64-apple-darwin }}
            ${{ steps.asset.outputs.asset-x86_64-unknown-linux-gnu }}
            ${{ steps.asset.outputs.asset-x86_64-pc-windows-gnu }}
            ${{ steps.asset.outputs.asset-aarch64-apple-darwin }}
            ${{ steps.asset.outputs.asset-aarch64-unknown-linux-gnu }}
